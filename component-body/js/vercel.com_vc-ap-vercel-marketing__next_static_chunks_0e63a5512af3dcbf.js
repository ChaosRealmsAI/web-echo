
!function(){try{var e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{},n=(new e.Error).stack;n&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[n]="693fa5f2-9756-5101-ac8a-2bedca66fdb3")}catch(e){}}();
(globalThis.TURBOPACK||(globalThis.TURBOPACK=[])).push(["object"==typeof document?document.currentScript:void 0,"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/trace/status.js [app-client] (ecmascript)",e=>{"use strict";var t;!function(e){e[e.UNSET=0]="UNSET",e[e.OK=1]="OK",e[e.ERROR=2]="ERROR"}(t||(t={})),e.s(["SpanStatusCode",()=>t])},"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js [app-client] (ecmascript)",e=>{"use strict";var t;!function(e){e[e.NONE=0]="NONE",e[e.SAMPLED=1]="SAMPLED"}(t||(t={})),e.s(["TraceFlags",()=>t])},"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js [app-client] (ecmascript)","[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/context/context.js [app-client] (ecmascript)",e=>{"use strict";function t(e){return Symbol.for(e)}var n=new function e(t){var n=this;n._currentContext=t?new Map(t):new Map,n.getValue=function(e){return n._currentContext.get(e)},n.setValue=function(t,r){var o=new e(n._currentContext);return o._currentContext.set(t,r),o},n.deleteValue=function(t){var r=new e(n._currentContext);return r._currentContext.delete(t),r}};e.s(["ROOT_CONTEXT",()=>n,"createContextKey",()=>t],"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/context/context.js [app-client] (ecmascript)");var r=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},o=function(e,t,n){if(n||2==arguments.length)for(var r,o=0,i=t.length;o<i;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))},i=function(){function e(){}return e.prototype.active=function(){return n},e.prototype.with=function(e,t,n){for(var i=[],a=3;a<arguments.length;a++)i[a-3]=arguments[a];return t.call.apply(t,o([n],r(i),!1))},e.prototype.bind=function(e,t){return t},e.prototype.enable=function(){return this},e.prototype.disable=function(){return this},e}();e.s(["NoopContextManager",()=>i],"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js [app-client] (ecmascript)")},"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/api/diag.js [app-client] (ecmascript)","[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/internal/global-utils.js [app-client] (ecmascript)","[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/diag/types.js [app-client] (ecmascript)",e=>{"use strict";var t,n="object"==typeof globalThis?globalThis:"object"==typeof self?self:"object"==typeof window?window:e.g,r="1.7.0",o=/^(\d+)\.(\d+)\.(\d+)(-(.+))?$/,i=function(e){var t=new Set([e]),n=new Set,r=e.match(o);if(!r)return function(){return!1};var i={major:+r[1],minor:+r[2],patch:+r[3],prerelease:r[4]};if(null!=i.prerelease)return function(t){return t===e};function a(e){return n.add(e),!1}return function(e){if(t.has(e))return!0;if(n.has(e))return!1;var r=e.match(o);if(!r)return a(e);var p={major:+r[1],minor:+r[2],patch:+r[3],prerelease:r[4]};if(null!=p.prerelease||i.major!==p.major)return a(e);if(0===i.major)return i.minor===p.minor&&i.patch<=p.patch?(t.add(e),!0):a(e);return i.minor<=p.minor?(t.add(e),!0):a(e)}}(r),a=Symbol.for("opentelemetry.js.api."+r.split(".")[0]);function p(e,t,o,i){void 0===i&&(i=!1);var p,l=n[a]=null!=(p=n[a])?p:{version:r};if(!i&&l[e]){var c=Error("@opentelemetry/api: Attempted duplicate registration of API: "+e);return o.error(c.stack||c.message),!1}if(l.version!==r){var c=Error("@opentelemetry/api: Registration of version v"+l.version+" for "+e+" does not match previously registered API v"+r);return o.error(c.stack||c.message),!1}return l[e]=t,o.debug("@opentelemetry/api: Registered a global for "+e+" v"+r+"."),!0}function l(e){var t,r,o=null==(t=n[a])?void 0:t.version;if(o&&i(o))return null==(r=n[a])?void 0:r[e]}function c(e,t){t.debug("@opentelemetry/api: Unregistering a global for "+e+" v"+r+".");var o=n[a];o&&delete o[e]}e.s(["getGlobal",()=>l,"registerGlobal",()=>p,"unregisterGlobal",()=>c],"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/internal/global-utils.js [app-client] (ecmascript)");var s=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},u=function(e,t,n){if(n||2==arguments.length)for(var r,o=0,i=t.length;o<i;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))},m=function(){function e(e){this._namespace=e.namespace||"DiagComponentLogger"}return e.prototype.debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return d("debug",this._namespace,e)},e.prototype.error=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return d("error",this._namespace,e)},e.prototype.info=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return d("info",this._namespace,e)},e.prototype.warn=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return d("warn",this._namespace,e)},e.prototype.verbose=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return d("verbose",this._namespace,e)},e}();function d(e,t,n){var r=l("diag");if(r)return n.unshift(t),r[e].apply(r,u([],s(n),!1))}!function(e){e[e.NONE=0]="NONE",e[e.ERROR=30]="ERROR",e[e.WARN=50]="WARN",e[e.INFO=60]="INFO",e[e.DEBUG=70]="DEBUG",e[e.VERBOSE=80]="VERBOSE",e[e.ALL=9999]="ALL"}(t||(t={})),e.s(["DiagLogLevel",()=>t],"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/diag/types.js [app-client] (ecmascript)");var f=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},y=function(e,t,n){if(n||2==arguments.length)for(var r,o=0,i=t.length;o<i;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))},g=function(){function e(){function e(e){return function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];var r=l("diag");if(r)return r[e].apply(r,y([],f(t),!1))}}var n=this;n.setLogger=function(e,r){if(void 0===r&&(r={logLevel:t.INFO}),e===n){var o,i,a,c=Error("Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation");return n.error(null!=(o=c.stack)?o:c.message),!1}"number"==typeof r&&(r={logLevel:r});var s=l("diag"),u=function(e,n){function r(t,r){var o=n[t];return"function"==typeof o&&e>=r?o.bind(n):function(){}}return e<t.NONE?e=t.NONE:e>t.ALL&&(e=t.ALL),n=n||{},{error:r("error",t.ERROR),warn:r("warn",t.WARN),info:r("info",t.INFO),debug:r("debug",t.DEBUG),verbose:r("verbose",t.VERBOSE)}}(null!=(i=r.logLevel)?i:t.INFO,e);if(s&&!r.suppressOverrideMessage){var m=null!=(a=Error().stack)?a:"<failed to generate stacktrace>";s.warn("Current logger will be overwritten from "+m),u.warn("Current logger will overwrite one already registered from "+m)}return p("diag",u,n,!0)},n.disable=function(){c("diag",n)},n.createComponentLogger=function(e){return new m(e)},n.verbose=e("verbose"),n.debug=e("debug"),n.info=e("info"),n.warn=e("warn"),n.error=e("error")}return e.instance=function(){return this._instance||(this._instance=new e),this._instance},e}();e.s(["DiagAPI",()=>g],"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/api/diag.js [app-client] (ecmascript)")},"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/api/context.js [app-client] (ecmascript)",e=>{"use strict";var t=e.i("[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js [app-client] (ecmascript)"),n=e.i("[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/internal/global-utils.js [app-client] (ecmascript)"),r=e.i("[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/api/diag.js [app-client] (ecmascript)"),o=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},i=function(e,t,n){if(n||2==arguments.length)for(var r,o=0,i=t.length;o<i;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))},a="context",p=new t.NoopContextManager,l=function(){function e(){}return e.getInstance=function(){return this._instance||(this._instance=new e),this._instance},e.prototype.setGlobalContextManager=function(e){return(0,n.registerGlobal)(a,e,r.DiagAPI.instance())},e.prototype.active=function(){return this._getContextManager().active()},e.prototype.with=function(e,t,n){for(var r,a=[],p=3;p<arguments.length;p++)a[p-3]=arguments[p];return(r=this._getContextManager()).with.apply(r,i([e,t,n],o(a),!1))},e.prototype.bind=function(e,t){return this._getContextManager().bind(e,t)},e.prototype._getContextManager=function(){return(0,n.getGlobal)(a)||p},e.prototype.disable=function(){this._getContextManager().disable(),(0,n.unregisterGlobal)(a,r.DiagAPI.instance())},e}();e.s(["ContextAPI",()=>l])},"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/context-api.js [app-client] (ecmascript)","[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/baggage/utils.js [app-client] (ecmascript)","[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/propagation-api.js [app-client] (ecmascript)",e=>{"use strict";var t=e.i("[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/api/context.js [app-client] (ecmascript)"),n=t.ContextAPI.getInstance();e.s(["context",()=>n],"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/context-api.js [app-client] (ecmascript)");var r=e.i("[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/internal/global-utils.js [app-client] (ecmascript)"),o=function(){function e(){}return e.prototype.inject=function(e,t){},e.prototype.extract=function(e,t){return e},e.prototype.fields=function(){return[]},e}(),i={get:function(e,t){if(null!=e)return e[t]},keys:function(e){return null==e?[]:Object.keys(e)}},a={set:function(e,t,n){null!=e&&(e[t]=n)}},p=(0,e.i("[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/context/context.js [app-client] (ecmascript)").createContextKey)("OpenTelemetry Baggage Key");function l(e){return e.getValue(p)||void 0}function c(){return l(t.ContextAPI.getInstance().active())}function s(e,t){return e.setValue(p,t)}function u(e){return e.deleteValue(p)}var m=e.i("[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/api/diag.js [app-client] (ecmascript)"),d=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a},f=function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},y=function(){function e(e){this._entries=e?new Map(e):new Map}return e.prototype.getEntry=function(e){var t=this._entries.get(e);if(t)return Object.assign({},t)},e.prototype.getAllEntries=function(){return Array.from(this._entries.entries()).map(function(e){var t=d(e,2);return[t[0],t[1]]})},e.prototype.setEntry=function(t,n){var r=new e(this._entries);return r._entries.set(t,n),r},e.prototype.removeEntry=function(t){var n=new e(this._entries);return n._entries.delete(t),n},e.prototype.removeEntries=function(){for(var t,n,r=[],o=0;o<arguments.length;o++)r[o]=arguments[o];var i=new e(this._entries);try{for(var a=f(r),p=a.next();!p.done;p=a.next()){var l=p.value;i._entries.delete(l)}}catch(e){t={error:e}}finally{try{p&&!p.done&&(n=a.return)&&n.call(a)}finally{if(t)throw t.error}}return i},e.prototype.clear=function(){return new e},e}(),g=Symbol("BaggageEntryMetadata"),v=m.DiagAPI.instance();function _(e){return void 0===e&&(e={}),new y(new Map(Object.entries(e)))}function h(e){return"string"!=typeof e&&(v.error("Cannot create baggage metadata from unknown type: "+typeof e),e=""),{__TYPE__:g,toString:function(){return e}}}e.s(["baggageEntryMetadataFromString",()=>h,"createBaggage",()=>_],"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/baggage/utils.js [app-client] (ecmascript)");var b="propagation",j=new o,x=(function(){function e(){this.createBaggage=_,this.getBaggage=l,this.getActiveBaggage=c,this.setBaggage=s,this.deleteBaggage=u}return e.getInstance=function(){return this._instance||(this._instance=new e),this._instance},e.prototype.setGlobalPropagator=function(e){return(0,r.registerGlobal)(b,e,m.DiagAPI.instance())},e.prototype.inject=function(e,t,n){return void 0===n&&(n=a),this._getGlobalPropagator().inject(e,t,n)},e.prototype.extract=function(e,t,n){return void 0===n&&(n=i),this._getGlobalPropagator().extract(e,t,n)},e.prototype.fields=function(){return this._getGlobalPropagator().fields()},e.prototype.disable=function(){(0,r.unregisterGlobal)(b,m.DiagAPI.instance())},e.prototype._getGlobalPropagator=function(){return(0,r.getGlobal)(b)||j},e})().getInstance();e.s(["propagation",()=>x],"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/propagation-api.js [app-client] (ecmascript)")},"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/trace-api.js [app-client] (ecmascript)","[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js [app-client] (ecmascript)","[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js [app-client] (ecmascript)",e=>{"use strict";var t=e.i("[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/internal/global-utils.js [app-client] (ecmascript)"),n=e.i("[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/api/context.js [app-client] (ecmascript)"),r=e.i("[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/context/context.js [app-client] (ecmascript)"),o=e.i("[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js [app-client] (ecmascript)"),i="0000000000000000",a="00000000000000000000000000000000",p={traceId:a,spanId:i,traceFlags:o.TraceFlags.NONE};e.s(["INVALID_SPANID",()=>i,"INVALID_SPAN_CONTEXT",()=>p,"INVALID_TRACEID",()=>a],"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js [app-client] (ecmascript)");var l=function(){function e(e){void 0===e&&(e=p),this._spanContext=e}return e.prototype.spanContext=function(){return this._spanContext},e.prototype.setAttribute=function(e,t){return this},e.prototype.setAttributes=function(e){return this},e.prototype.addEvent=function(e,t){return this},e.prototype.setStatus=function(e){return this},e.prototype.updateName=function(e){return this},e.prototype.end=function(e){},e.prototype.isRecording=function(){return!1},e.prototype.recordException=function(e,t){},e}(),c=(0,r.createContextKey)("OpenTelemetry Context Key SPAN");function s(e){return e.getValue(c)||void 0}function u(){return s(n.ContextAPI.getInstance().active())}function m(e,t){return e.setValue(c,t)}function d(e){return e.deleteValue(c)}function f(e,t){return m(e,new l(t))}function y(e){var t;return null==(t=s(e))?void 0:t.spanContext()}var g=/^([0-9a-f]{32})$/i,v=/^[0-9a-f]{16}$/i;function _(e){return g.test(e)&&e!==a}function h(e){var t;return _(e.traceId)&&(t=e.spanId,v.test(t)&&t!==i)}function b(e){return new l(e)}e.s(["isSpanContextValid",()=>h,"isValidTraceId",()=>_,"wrapSpanContext",()=>b],"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js [app-client] (ecmascript)");var j=n.ContextAPI.getInstance(),x=function(){function e(){}return e.prototype.startSpan=function(e,t,n){if(void 0===n&&(n=j.active()),null==t?void 0:t.root)return new l;var r,o=n&&y(n);return"object"==typeof(r=o)&&"string"==typeof r.spanId&&"string"==typeof r.traceId&&"number"==typeof r.traceFlags&&h(o)?new l(o):new l},e.prototype.startActiveSpan=function(e,t,n,r){if(!(arguments.length<2)){2==arguments.length?a=t:3==arguments.length?(o=t,a=n):(o=t,i=n,a=r);var o,i,a,p=null!=i?i:j.active(),l=this.startSpan(e,o,p),c=m(p,l);return j.with(c,a,void 0,l)}},e}(),w=new x,A=function(){function e(e,t,n,r){this._provider=e,this.name=t,this.version=n,this.options=r}return e.prototype.startSpan=function(e,t,n){return this._getTracer().startSpan(e,t,n)},e.prototype.startActiveSpan=function(e,t,n,r){var o=this._getTracer();return Reflect.apply(o.startActiveSpan,o,arguments)},e.prototype._getTracer=function(){if(this._delegate)return this._delegate;var e=this._provider.getDelegateTracer(this.name,this.version,this.options);return e?(this._delegate=e,this._delegate):w},e}(),S=new(function(){function e(){}return e.prototype.getTracer=function(e,t,n){return new x},e}()),C=function(){function e(){}return e.prototype.getTracer=function(e,t,n){var r;return null!=(r=this.getDelegateTracer(e,t,n))?r:new A(this,e,t,n)},e.prototype.getDelegate=function(){var e;return null!=(e=this._delegate)?e:S},e.prototype.setDelegate=function(e){this._delegate=e},e.prototype.getDelegateTracer=function(e,t,n){var r;return null==(r=this._delegate)?void 0:r.getTracer(e,t,n)},e}(),I=e.i("[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/api/diag.js [app-client] (ecmascript)"),E="trace",T=(function(){function e(){this._proxyTracerProvider=new C,this.wrapSpanContext=b,this.isSpanContextValid=h,this.deleteSpan=d,this.getSpan=s,this.getActiveSpan=u,this.getSpanContext=y,this.setSpan=m,this.setSpanContext=f}return e.getInstance=function(){return this._instance||(this._instance=new e),this._instance},e.prototype.setGlobalTracerProvider=function(e){var n=(0,t.registerGlobal)(E,this._proxyTracerProvider,I.DiagAPI.instance());return n&&this._proxyTracerProvider.setDelegate(e),n},e.prototype.getTracerProvider=function(){return(0,t.getGlobal)(E)||this._proxyTracerProvider},e.prototype.getTracer=function(e,t){return this.getTracerProvider().getTracer(e,t)},e.prototype.disable=function(){(0,t.unregisterGlobal)(E,I.DiagAPI.instance()),this._proxyTracerProvider=new C},e})().getInstance();e.s(["trace",()=>T],"[project]/node_modules/.pnpm/@opentelemetry+api@1.7.0/node_modules/@opentelemetry/api/build/esm/trace-api.js [app-client] (ecmascript)")}]);

//# sourceMappingURL=5bb76a0e54634e95.js.map
//# debugId=693fa5f2-9756-5101-ac8a-2bedca66fdb3
